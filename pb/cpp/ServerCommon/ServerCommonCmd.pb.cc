// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ServerCommonCmd.proto

#include "ServerCommonCmd.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
static constexpr ::PROTOBUF_NAMESPACE_ID::Metadata* file_level_metadata_ServerCommonCmd_2eproto = nullptr;
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_ServerCommonCmd_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_ServerCommonCmd_2eproto = nullptr;
const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_ServerCommonCmd_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_ServerCommonCmd_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\025ServerCommonCmd.proto*\245\001\n\020EMsgIDServer"
  "Main\022\030\n\024MsgIDServerMain_Null\020\000\022\030\n\024LOGIN2"
  "CENTER_MANAGER\020\001\022\027\n\023GAME2CENTER_MANAGER\020"
  "\002\022\027\n\023CENTER2LOGIN_NOTIFY\020\003\022\026\n\022CENTER2GAM"
  "E_NOTIFY\020\004\022\023\n\017ROBOT2GAME_MAIN\020\005*\241\002\n\031EMsg"
  "IDServerInternalProto\022\030\n\024SERVER_INTERNAL"
  "_NULL\020\000\022\031\n\025LOGIN2CENTER_Register\020\001\022 \n\034LO"
  "GIN2CENTER_UpdateOnlineNum\020\002\022\031\n\025LOGIN2CE"
  "NTER_SendGold\020\003\022\035\n\031CENTER2LOGIN_SendGold"
  "Resp\020\004\022\031\n\024GAME2CENTER_Register\020\321\017\022\033\n\026GAM"
  "E2CENTER_ApplyRobot\020\322\017\022\037\n\032CENTER2GAME_Ap"
  "plyRobotResp\020\323\017\022\032\n\025ROBOT2GAME_RobotLogin"
  "\020\271\027*\367\006\n\010EMsgIDDB\022\020\n\014MsgIDDB_NULL\020\000\022\035\n\031CE"
  "NTER2DB_UpdateOnlineNum\020\001\022\033\n\027CENTER2DB_I"
  "nitOnlineNum\020\002\022\033\n\027CENTER2DB_RegisterLogi"
  "n\020\003\022\035\n\031CENTER2DB_UnregisterLogin\020\004\022\032\n\026CE"
  "NTER2DB_RegisterGame\020\005\022\032\n\026CENTER2DB_Load"
  "AllRobot\020\006\022\036\n\032DB2CENTER_LoadAllRobotResp"
  "\020\007\022\031\n\025CENTER2DB_CreateRobot\020\010\022\035\n\031DB2CENT"
  "ER_CreateRobotResp\020\t\022\023\n\016LOGIN2DB_Login\020\351"
  "\007\022\027\n\022DB2LOGIN_LoginResp\020\352\007\022\034\n\027DB2LOGIN_L"
  "oadPlayerData\020\353\007\022\026\n\021LOGIN2DB_LoginOut\020\354\007"
  "\022\036\n\031LOGIN2DB_UpdatePlayerInfo\020\355\007\022\026\n\021LOGI"
  "N2DB_ReadMail\020\356\007\022\026\n\021LOGIN2DB_PickMail\020\357\007"
  "\022\032\n\025DB2LOGIN_PickMailResp\020\360\007\022\030\n\023LOGIN2DB"
  "_RecallMail\020\361\007\022\034\n\027DB2LOGIN_RecallMailRes"
  "p\020\362\007\022\037\n\032LOGIN2DB_DeleteAllReadMail\020\363\007\022#\n"
  "\036DB2LOGIN_DeleteAllReadMailResp\020\364\007\022\034\n\027LO"
  "GIN2DB_BankModifyGold\020\365\007\022 \n\033DB2LOGIN_Ban"
  "kModifyGoldResp\020\366\007\022\026\n\021LOGIN2DB_SendGold\020"
  "\367\007\022\032\n\025DB2LOGIN_SendGoldResp\020\370\007\022\022\n\rGAME2D"
  "B_Login\020\321\017\022\026\n\021DB2GAME_LoginResp\020\322\017\022\033\n\026DB"
  "2GAME_LoadPlayerData\020\323\017\022\037\n\032GAME2DB_Robot"
  "LoginByUserID\020\324\017\022#\n\036DB2GAME_RobotLoginBy"
  "UserIDResp\020\325\017b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_ServerCommonCmd_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_ServerCommonCmd_2eproto_sccs[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_ServerCommonCmd_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ServerCommonCmd_2eproto = {
  false, false, descriptor_table_protodef_ServerCommonCmd_2eproto, "ServerCommonCmd.proto", 1381,
  &descriptor_table_ServerCommonCmd_2eproto_once, descriptor_table_ServerCommonCmd_2eproto_sccs, descriptor_table_ServerCommonCmd_2eproto_deps, 0, 0,
  schemas, file_default_instances, TableStruct_ServerCommonCmd_2eproto::offsets,
  file_level_metadata_ServerCommonCmd_2eproto, 0, file_level_enum_descriptors_ServerCommonCmd_2eproto, file_level_service_descriptors_ServerCommonCmd_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_ServerCommonCmd_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_ServerCommonCmd_2eproto)), true);
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EMsgIDServerMain_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_ServerCommonCmd_2eproto);
  return file_level_enum_descriptors_ServerCommonCmd_2eproto[0];
}
bool EMsgIDServerMain_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EMsgIDServerInternalProto_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_ServerCommonCmd_2eproto);
  return file_level_enum_descriptors_ServerCommonCmd_2eproto[1];
}
bool EMsgIDServerInternalProto_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 2001:
    case 2002:
    case 2003:
    case 3001:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EMsgIDDB_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_ServerCommonCmd_2eproto);
  return file_level_enum_descriptors_ServerCommonCmd_2eproto[2];
}
bool EMsgIDDB_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 1001:
    case 1002:
    case 1003:
    case 1004:
    case 1005:
    case 1006:
    case 1007:
    case 1008:
    case 1009:
    case 1010:
    case 1011:
    case 1012:
    case 1013:
    case 1014:
    case 1015:
    case 1016:
    case 2001:
    case 2002:
    case 2003:
    case 2004:
    case 2005:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
